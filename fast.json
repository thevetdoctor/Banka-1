{
    "swagger": "2.0",
    "info": {
      "description": "Banka is a light-weight core banking application that powers banking operations.",
      "version": "1.0.0",
      "title": "banka",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "jamesugbanu@gmail.com"
      },
      "license": {
        "name": "GNU General Public License",
        "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
      }
    },
    "host": "broad-bank.herokuapp.com",
    "basePath": "/api/v1",
    "tags": [
      {
        "name": "auth",
        "description": "User authentication",
        "externalDocs": {
          "description": "User signin and signup",
          "url": "broad-bank.herokuapp.com"
        }
      },
      {
        "name": "transactions",
        "description": "Everything about user transactions",
        "externalDocs": {
          "description": "Find out more",
          "url": "broad-bank.herokuapp.com"
        }
      },
      {
        "name": "accounts",
        "description": "All about bank account",
        "externalDocs": {
          "description": "user bank account",
          "url": "broad-bank.herokuapp.com"
        }
      },
      {
        "name": "users",
        "description": "User operations",
        "externalDocs": {
          "description": "Find out more",
          "url": "broad-bank.herokuapp.com"
        }
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/accounts": {
        "post": {
          "tags": [
            "accounts"
          ],
          "summary": "Create a bank account",
          "description": "user can create a bank account",
          "operationId": "createAccount",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "account",
              "description": "create a bank account",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Accounts"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Account created Sucessfully",
              "schema": {
                "$ref": "#/definitions/Accounts3"
              }
            }
          },
          "security": [
            {
              "banka_auth": [
                "write:accounts"
              ],
              "api_key": []
            }
          ]
        },
        "get": {
          "tags": [
            "accounts"
          ],
          "summary": "Get all accounts",
          "description": "Return all accounts from the database",
          "operationId": "getAllAccounts",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
                "name": "status",
                "in": "query",
                "description": "Return all bank accounts with this status",
                "required": false,
                "type": "string"
              }
          ],
          "responses": {
            "200": {
              "description": "Successfully got accounts",
              "schema": {
                "$ref": "#/definitions/Accounts4"
              }
            },
            "404": {
              "description": "accounts not found"
            }
          },
          "security": [
            {
              "banka_auth": [
                "read:accounts"
              ],
              "api_key": []
            }
          ]
        }
      },
      "/accounts/{accountNumber}": {
        "get": {
          "tags": [
            "accounts"
          ],
          "summary": "Find accounts by accountNumber",
          "description": "Returns a single account",
          "operationId": "getUserAccount",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "accountNumber",
              "in": "path",
              "description": "accountNumber of bank account to return",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful got bank account",
              "schema": {
                "$ref": "#/definitions/Accounts5"
              }
            },
            "404": {
              "description": "Account not found"
            }
          },
          "security": [
            {
              "banka_auth": [
                "read:accounts"
              ],
              "api_key": []
            }
          ]
        },
        "put": {
          "tags": [
            "accounts"
          ],
          "summary": "Updates bank account status",
          "description": "The bank account status can either be Active or Dormant",
          "operationId": "updateAccountStatus",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "accountNumber",
              "in": "path",
              "description": "accountNumber of bank account that needs to be updated",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "status",
              "description": "add bank account status",
              "required": true,
              "type": "string",
              "schema": {
                "$ref": "#/definitions/Accounts2"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "Bank account updated successfully",
              "schema": {
                "$ref": "#/definitions/Accounts6"
              }
            },
            "404": {
              "description": "Bank account not found"
            }
          },
          "security": [
            {
              "banka_auth": [
                "read:accounts"
              ],
              "api_key": []
            }
          ]
        }
      },
      "/api/v1/user/{email}/accounts": {
        "get": {
          "tags": [
            "accounts"
          ],
          "summary": "Find bank account by email",
          "description": "Returns all bank account",
          "operationId": "getUserAccounts",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "email",
              "in": "path",
              "description": "email of of the user who's bank account(s) is to be returned",
              "required": true,
              "type": "string",
              "format": "email"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful got bank account(s)",
              "schema": {
                "$ref": "#/definitions/Accounts7"
              }
            },
            "404": {
              "description": "Bank account not found"
            }
          },
          "security": [
            {
              "banka_auth": [
                "read:accounts"
              ],
              "api_key": []
            }
          ]
        }
      },
      "/api/v1/accounts/{accountNumber}": {
        "delete": {
          "tags": [
            "accounts"
          ],
          "summary": "Delete bank account by account number",
          "description": "Bank account Sucessfully deleted",
          "operationId": "deleteBankAccount",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "accoutNumber",
              "in": "path",
              "description": "Bank account Sucessfully deleted",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "202": {
              "description": "Bank account Sucessfully deleted"
            },
            "404": {
              "description": "Bank account not found"
            }
          },
          "security": [
            {
              "banka_auth": [
                "write:accounts"
              ],
              "api_key": []
            }
          ]
        }
      },
      "/auth/signup": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Enables a user to signup",
          "description": "Registers a new user",
          "operationId": "signup",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Account created successfully",
              "schema": {
                "$ref": "#/definitions/User2"
              }
            }
          }
        }
      },
      "/auth/signin": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Enables a user to signin",
          "description": "Authenticate a user",
          "operationId": "signin",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Signin"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "You have been logged in successfully!",
              "schema": {
                "$ref": "#/definitions/User2"
              }
            },
            "401": {
              "description": "Could not login. The email and password do not match"
            }
          }
        }
      },
      "/api/v1/transactions/{accountNumber}/credit": {
        "post": {
          "tags": [
            "transactions"
          ],
          "summary": "Credit a bank account",
          "description": "",
          "operationId": "creditAccount",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "accountNumber",
              "description": "account number of the bank account",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Transactions"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Bank account credited successfully",
              "schema": {
                "$ref": "#/definitions/Transactions2"
              }
            },
            "404": {
                "description": "Transactions not found"
              }
          },
          "security": [
            {
              "banka_auth": [
                "write:transactions"
              ],
              "api_key": []
            }
          ]
        }
      },
      "/api/v1/transactions/{accountNumber}/debit": {
        "post": {
          "tags": [
            "transactions"
          ],
          "summary": "Debit a bank account",
          "description": "",
          "operationId": "debitAccount",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "accountNumber",
              "description": "account number of the bank account",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Transactions"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Bank account debit successfully",
              "schema": {
                "$ref": "#/definitions/Transactions2"
              }
            },
            "404": {
                "description": "Transactions not found"
              }
          },
          "security": [
            {
              "banka_auth": [
                "write:transactions"
              ],
              "api_key": []
            }
          ]
        }
      },
      "/transactions/{transactionId}": {
        "get": {
          "tags": [
            "transactions"
          ],
          "summary": "Find transaction by ID",
          "description": "Returns a single transaction",
          "operationId": "getTransactionById",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "transactionId",
              "in": "path",
              "description": "ID of transaction to return",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful got transaction",
              "schema": {
                "$ref": "#/definitions/Transactions3"
              }
            },
            "404": {
              "description": "Transaction not found"
            }
          },
          "security": [
            {
              "banka_auth": [
                "read:transactions"
              ],
              "api_key": []
            }
          ]
        }
      }
    },
    "securityDefinitions": {
      "banka_auth": {
        "type": "oauth2",
        "authorizationUrl": "broad-bank.herokuapp.com/api/v1/auth/signin",
        "flow": "implicit",
        "scopes": {
          "write:accounts": "create bank account",
          "read:accounts": "get bank account",
          "write:transactions": "add a transaction",
          "read:transactions": "get transactions"
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "token",
        "in": "header"
      }
    },
    "definitions": {
      "Accounts": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "bank account type",
            "enum": [
                "savings",
                "current"
              ]
          }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "Accounts2": {
        "type": "object",
        "properties": {
            "type": {
                "type": "string",
                "description": "bank account status",
                "enum": [
                    "active",
                    "dormant"
                  ]
              }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "Accounts3": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "description": "bank account type",
            "enum": [
                "savings",
                "current"
              ]
          },
          "openingBalance": {
            "type": "integer",
            "format": "float"
          }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "Accounts4": {
        "type": "object",
        "properties": {
            "id": {
            "type": "integer"
            },
          "accountNumber": {
            "type": "integer"
          },
          "owner": {
            "type": "integer"
            },
          "type": {
            "type": "string",
            "description": "bank account type",
            "enum": [
                "savings",
                "current"
              ]
          },
          "status": {
            "type": "string",
            "description": "bank account status",
            "enum": [
                "draft",
                "savings",
                "current"
              ]
          },
          "balance": {
            "type": "integer",
            "format": "float"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "Accounts5": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "integer"
          },
          "email": {
            "type": "string"
            },
          "owner": {
            "type": "integer"
            },
          "type": {
            "type": "string",
            "description": "bank account type",
            "enum": [
                "savings",
                "current"
              ]
          },
          "status": {
            "type": "string",
            "description": "bank account status",
            "enum": [
                "draft",
                "savings",
                "current"
              ]
          },
          "balance": {
            "type": "integer",
            "format": "float"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "Accounts6": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "description": "bank account status",
            "enum": [
                "active",
                "dormant"
              ]
          }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "Accounts7": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "integer"
          },
          "owner": {
            "type": "integer"
            },
          "type": {
            "type": "string",
            "description": "bank account type",
            "enum": [
                "savings",
                "current"
              ]
          },
          "status": {
            "type": "string",
            "description": "bank account status",
            "enum": [
                "draft",
                "savings",
                "current"
              ]
          },
          "balance": {
            "type": "integer",
            "format": "float"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "User2": {
        "type": "object",
        "properties": {
                "token": {
                   "type": "string"
                },
                "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
        },
        "xml": {
          "name": "User2"
        }
      },
      "Signin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Transactions": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "float"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "enum": [
                "credit",
                "debit"
              ]
          }
        },
        "xml": {
          "name": "Transaction"
        }
      },
      "Transactions2": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "integer",
            "format": "int64"
          },
          "cashier": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "float"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "enum": [
                "credit",
                "debit"
              ]
          },
          "oldbalance": {
            "type": "integer",
            "format": "float"
          },
          "accountbalance": {
            "type": "integer",
            "format": "float"
          }
        },
        "xml": {
          "name": "Transaction"
        }
      },
      "Transactions3": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "integer",
            "format": "int64"
          },
          "cashier": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "float"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "enum": [
                "credit",
                "debit"
              ]
          },
          "oldBalance": {
            "type": "integer",
            "format": "float"
          },
          "newBalance": {
            "type": "integer",
            "format": "float"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "Transaction"
        }
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }